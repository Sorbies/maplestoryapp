2023-08-18:
    - Finished refactoring data structures (presets and characters) to use classes
    - Individualized edit mode for each name component instead of having one large edit mode
    - Swap buttons for presets
    - Documentation up to ChangeDifficultyC.js in presets

2023-08-02:
    - Reorganizing projects' folder structure
    - Began refactoring data structures (again) to use classes

2023-07-25:
    - Added pictures to the bosses
    - Adjusted column width
    - Moved hooks in BossingTableC to ChangeProgressC and SwapPositionC
    - Implemented a dropdown function for the changing preset mechanism
    - Separated extra stuff that was in the character column into their own columns
    - Added a check all feature for a character

2023-07-22:
    - DeleteCharC.js refactored
    - DeleteCharP.js refactored
    - AddCharC.js refactored
    - AddCharP.js refactored
    - PresetTableC.js refactored
    - PresetTableP.js refactored
    - PresetNameC.js refactored
    - PresetNameP.js refactored
    - ChangeDifficultyC.js refactored
    - ChangeDifficultyP.js refactored
    - DeletePresetC.js refactored
    - DeletePresetP.js refactored
    - AddPresetC.js refactored
    - AddPresetP.js refactored

2023-07-21:
    - Began the process of refactoring data structures
    - Bossing.js refactored
    - BossingData.js refactored
    - BossingCalculations.js refactored
    - BossingTableC.js refactored
    - BossingTableP.js refactored
    - CharacterNameC.js refactored
    - CharacterNameP.js refactored
    - ChangePresetC.js refactored
    - ChangePresetP.js refactored
    - SwapPositionC.js refactored
    - SwapPositionP.js refactored
    - ChangeProgressC.js refactored
    - ChangeProgressP.js refactored

2023-07-16:
    - Began brainstorming way to redo data structure
    - Removed ability to edit difficulties directly for each character. Instead, use presets
    - Updated progress buttons to reflect the preset the character has selected
    - Removed charDifficulties from code of other files (the components and states are still there)

2023-07-09:
    - Added cursor attribute to buttons
    - Added new state, charPresets, that tracks which preset each character is using
    - Added way to display presets as buttons in order to allow user to set the active preset for each character

2023-07-05:
    - Moved the ChangeProgressP logic into ChangeProgressC
    - Applied the css to all my buttons except SwapPositionP
    - Fixed a bug with not being able to update character names (it had to do with () => in the handleNameChange)
    - Added ability to make presets. Can't do anything with them yet though

2023-07-04:
    - Made ChangeProgressP buttons use states and effect hooks
    - FIXED THE CSS DELAYED RENDERING THING!

2023-07-03:
    - Did a little bit of styling
    - Moved edit button out into its own component
    - Disabled buttons now read "Disabled"
    - Created a preset mode (does nothing for now) and a way to toggle it, replacing the character sheet with a diff component
    - Solved a CSS bug that arose from conditional rendering of a component based on presetMode. Led to creating a dummy state to force updates
    - Fixed some DOM null errors

2023-06-29:
    - Added in edit mode, which hides the difficulty modes/delete column/add character sections of the table if disabled
    - Added ability to change character names inside of character mode
    - Created swap position functionality in edit mode
    - Fixed my notation when passing functions to JSX that was causing code to execute more than intended

2023-06-28:
    - Refactored basically all components in the bossing app to now access the three main states using context hooks rather than props
      in order to solve prop drilling issue

2023-06-25:
    - Refactored BossingTableEditor.js and BossingTable.js in order to move the functions into more categorized files
      Thus, several new components were created for adding characters, deleting characters, changing progress, and changing difficulties.

2023-06-23:
    - Added the ability to delete characters from the bossing table (new column in the table having the button)
    - Added the ability to manipulate the difficulties of the bosses that the characters do
    - Simplified Chaos/Hard down to Hard
    - Grayed out the select difficulty buttons for the buttons that don't exist
    - Grayed out the clear button if the boss is skipped
    - Changed the non-existent difficulty buttons from being grayed out to just being hidden

2023-06-22:
    - Refactored variables/functions in Bossing.js and separated them into BossingData.js, BossingCalculations.js, and BossingTableEditor.js
    - Refactored file structure of the pages
    - Put the project up on GitHub
    - Added the ability to add characters to the bossing table
    - Removed hardcoded initial states

2023-06-21:
    - Got the pages configuration running
    - Added a basic nav bar
    - Organized pages into containers and presentational components
    - Made the header row for the bossing table
    - Hard coded a row for the bossing table
    - Converted the hardcoded row into multiple states in Bossing.js
    - Added ability to toggle the progress state with a button for each boss
    - Displayed boss difficulties for each boss for each character
    - Added ability to track current income earned based on what bosses are checked as cleared (with COMMAS >:D)
    - Added ability to remember states through refreshes using local storage
    - Refactored my copy-pasted hook logic that was for each state (was using a state hook and two effect hooks to init state and set up local storage).
      Now they all use the same custom hook but with diff arguments passed in (I feel like a genius)

2023-06-20:
    - Created this app
    - Installed React Router to add pages
    - Started adding subpages
